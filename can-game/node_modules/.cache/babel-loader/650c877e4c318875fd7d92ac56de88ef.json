{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aprit\\\\Documents\\\\GitHub\\\\js-game\\\\can-game\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport REACT from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(MenuContainer, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 7\n  }, this);\n}\n\n_c = App;\nconst menuItemsOptions = [{\n  text: 'New Game'\n}, {\n  text: 'Instructions'\n}, {\n  text: 'GitHub'\n}];\n\nfunction MenuContainer() {\n  _s();\n\n  const [activeItem, setActiveItem] = React.useState('');\n  const [activeItemPos, setActiveItemPos] = React.useState(0);\n  const [activeItemColor, setActiveItemColor] = React.useState('');\n\n  const createClickHandler = activeItem => e => {\n    e.preventDefault();\n    setActiveItem(activeItem);\n    setActiveItemPos(document.getElementById(activeItem).offsetTop);\n    setActiveItemColor(window.getComputedStyle(document.getElementById(activeItem)).getPropertyValue('background-color'));\n  };\n\n  const menuItems = menuItemsOptions.map(item => /*#__PURE__*/_jsxDEV(MenuItem, {\n    item: item,\n    createClickHandler: createClickHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 52\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"menu-item--active\",\n      style: {\n        top: activeItemPos,\n        backgroundColor: activeItemColor\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), menuItems]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MenuContainer, \"7PDnXgXsYwy/nXqaE+jWwOX07Dk=\");\n\n_c2 = MenuContainer;\n\nfunction MenuItem(_ref) {\n  let {\n    createClickHandler,\n    item\n  } = _ref;\n  const clickHandler = createClickHandler(item.text);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"menu-item\",\n    id: item.text,\n    onClick: clickHandler,\n    children: item.text.toUpperCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} // ReactDOM.render(<App/>, document.getElementById('root'))\n\n\n_c3 = MenuItem;\nexport default App;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"MenuContainer\");\n$RefreshReg$(_c3, \"MenuItem\");","map":{"version":3,"sources":["C:/Users/aprit/Documents/GitHub/js-game/can-game/src/App.js"],"names":["REACT","App","menuItemsOptions","text","MenuContainer","activeItem","setActiveItem","React","useState","activeItemPos","setActiveItemPos","activeItemColor","setActiveItemColor","createClickHandler","e","preventDefault","document","getElementById","offsetTop","window","getComputedStyle","getPropertyValue","menuItems","map","item","top","backgroundColor","MenuItem","clickHandler","toUpperCase"],"mappings":";;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;;;AAEA,SAASC,GAAT,GAAe;AACb,sBACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA,UADJ;AAGD;;KAJQA,G;AAMT,MAAMC,gBAAgB,GAAG,CACvB;AAAEC,EAAAA,IAAI,EAAE;AAAR,CADuB,EAEvB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAFuB,EAGvB;AAAEA,EAAAA,IAAI,EAAE;AAAR,CAHuB,CAAzB;;AAMA,SAASC,aAAT,GAAyB;AAAA;;AACvB,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BC,KAAK,CAACC,QAAN,CAAe,EAAf,CAApC;AACA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCH,KAAK,CAACC,QAAN,CAAe,CAAf,CAA1C;AACA,QAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCL,KAAK,CAACC,QAAN,CAAe,EAAf,CAA9C;;AAEA,QAAMK,kBAAkB,GAAIR,UAAD,IAAgBS,CAAC,IAAI;AAC9CA,IAAAA,CAAC,CAACC,cAAF;AAEAT,IAAAA,aAAa,CAACD,UAAD,CAAb;AACAK,IAAAA,gBAAgB,CAACM,QAAQ,CAACC,cAAT,CAAwBZ,UAAxB,EAAoCa,SAArC,CAAhB;AACAN,IAAAA,kBAAkB,CAACO,MAAM,CAACC,gBAAP,CAAwBJ,QAAQ,CAACC,cAAT,CAAwBZ,UAAxB,CAAxB,EAA6DgB,gBAA7D,CAA8E,kBAA9E,CAAD,CAAlB;AACD,GAND;;AAQE,QAAMC,SAAS,GAAGpB,gBAAgB,CAACqB,GAAjB,CAAqBC,IAAI,iBAAI,QAAC,QAAD;AAAU,IAAA,IAAI,EAAGA,IAAjB;AAAwB,IAAA,kBAAkB,EAAGX;AAA7C;AAAA;AAAA;AAAA;AAAA,UAA7B,CAAlB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA,4BACE;AAAM,MAAA,SAAS,EAAC,mBAAhB;AAAoC,MAAA,KAAK,EAAE;AAAEY,QAAAA,GAAG,EAAEhB,aAAP;AAAsBiB,QAAAA,eAAe,EAAEf;AAAvC;AAA3C;AAAA;AAAA;AAAA;AAAA,YADF,EAEIW,SAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMH;;GArBQlB,a;;MAAAA,a;;AAuBT,SAASuB,QAAT,OAAgD;AAAA,MAA9B;AAAEd,IAAAA,kBAAF;AAAsBW,IAAAA;AAAtB,GAA8B;AAC9C,QAAMI,YAAY,GAAGf,kBAAkB,CAACW,IAAI,CAACrB,IAAN,CAAvC;AAEA,sBACE;AACE,IAAA,SAAS,EAAC,WADZ;AAEE,IAAA,EAAE,EAAGqB,IAAI,CAACrB,IAFZ;AAGE,IAAA,OAAO,EAAGyB,YAHZ;AAAA,cAKIJ,IAAI,CAACrB,IAAL,CAAU0B,WAAV;AALJ;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;MAdSF,Q;AAeT,eAAe1B,GAAf","sourcesContent":["\nimport REACT from 'react';\nimport './App.css';\n\nfunction App() {\n  return (\n      <MenuContainer/>\n  );\n}\n\nconst menuItemsOptions = [\n  { text: 'New Game' },\n  { text: 'Instructions' }, \n  { text: 'GitHub' },\n]\n\nfunction MenuContainer() {\n  const [activeItem, setActiveItem] = React.useState('')\n  const [activeItemPos, setActiveItemPos] = React.useState(0)\n  const [activeItemColor, setActiveItemColor] = React.useState('')\n\n  const createClickHandler = (activeItem) => e => {\n    e.preventDefault()\n\n    setActiveItem(activeItem)\n    setActiveItemPos(document.getElementById(activeItem).offsetTop)\n    setActiveItemColor(window.getComputedStyle(document.getElementById(activeItem)).getPropertyValue('background-color'))\n  }\n  \n    const menuItems = menuItemsOptions.map(item => <MenuItem item={ item } createClickHandler={ createClickHandler }/>)\n                                               \n    return (\n      <div className='menu-container'>\n        <span className='menu-item--active' style={{ top: activeItemPos, backgroundColor: activeItemColor }}/>\n        { menuItems }\n      </div>\n    )\n}\n\nfunction MenuItem({ createClickHandler, item }) {\n  const clickHandler = createClickHandler(item.text)\n  \n  return (\n    <div \n      className='menu-item'\n      id={ item.text }\n      onClick={ clickHandler }\n    >\n      { item.text.toUpperCase() }\n    </div>\n  )\n}\n\n// ReactDOM.render(<App/>, document.getElementById('root'))\nexport default App;\n"]},"metadata":{},"sourceType":"module"}